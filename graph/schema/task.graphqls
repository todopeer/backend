type Task {
	id: ID!
	name: String!
	description: String
	status: Int!
	timeCreated: Date!
	timeUpdated: Date!
	timeCompleted: Date
	dueDate: Date
}

type Event {
	id: ID!
	task: Task!
	timing: [String!]!
	fullPomo: Boolean!
	timeCreated: Date!
	timeUpdated: Date!
}

input TaskInput {
	name: String!
	description: String
	dueDate: Date
}

input TaskUpdateInput {
	taskId: ID!
	taskFields: TaskInput!
}

extend type Mutation {
	taskCreate(input: TaskInput!): Task! @auth
	taskUpdate(input: TaskUpdateInput!): Task! @auth
}

extend type Query {
	events(date: Date!): [Event!] @auth
	tasks(date: Date!): [Task!] @auth
}
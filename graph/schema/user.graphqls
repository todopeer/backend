type User {
	id: ID!

	# used for login, always private
	email: String!

	# the name shown to public
	name: String

	# if provided, would make your todo public
	username: String

	runningTaskID: ID

	runningTask: Task
}

input LoginInput {
	email: String!
	password: String!
}

input UserUpdateInput {
	name: String
	username: String
	password: String
}

extend type Query {
	me: User @auth
}

extend type Mutation {
	login(input: LoginInput!): AuthPayload!
	logout: Boolean! @auth
	# userUpdate user can only update him-/herself
	userUpdate(input: UserUpdateInput!): User! @auth
}

type AuthPayload {
	user: User!
	token: String!
}

type UserPublic {
	id: ID!
	username: String
	name: String
	runningTaskID: ID
}